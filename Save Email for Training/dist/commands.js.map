{"version":3,"file":"commands.js","mappings":";;;;AAAA;AACA;AACA;AACA;;AAEA,IAAIA,WAAW;AAEfC,MAAM,CAACC,UAAU,GAAG,UAAUC,MAAM,EAAE;EAClCH,WAAW,GAAGC,MAAM,CAACG,OAAO,CAACC,OAAO,CAACC,IAAI;AAC7C,CAAC;;AAED;AACA;AACA,SAASC,YAAYA,CAACC,KAAK,EAAE;EACzB;EACAP,MAAM,CAACG,OAAO,CAACK,EAAE,CAACC,kBAAkB,CAAC,8EAA8E,EACjH;IAACC,MAAM,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAI,CAAC,EAC9C,UAAUC,MAAM,EAAE;IACd,IAAIA,MAAM,CAACC,MAAM,KAAKd,MAAM,CAACe,iBAAiB,CAACC,MAAM,EAAE;MACnD;MACAC,OAAO,CAACC,KAAK,CAACL,MAAM,CAACK,KAAK,CAACC,OAAO,CAAC;MACnCZ,KAAK,CAACa,SAAS,CAAC;QAAEC,UAAU,EAAE;MAAM,CAAC,CAAC;MACtC;IACJ,CAAC,MAAM;MACH;MACA,IAAIC,MAAM,GAAGT,MAAM,CAACU,KAAK;;MAEzB;MACAD,MAAM,CAACE,eAAe,CAACxB,MAAM,CAACyB,SAAS,CAACC,qBAAqB,EAAE,UAAUC,GAAG,EAAE;QAC1EL,MAAM,CAACM,KAAK,CAAC,CAAC;QACd,IAAID,GAAG,CAACR,OAAO,KAAK,KAAK,EAAE;UACvB;UACAZ,KAAK,CAACa,SAAS,CAAC;YAAEC,UAAU,EAAE;UAAK,CAAC,CAAC;QACzC,CAAC,MAAM;UACH;UACAd,KAAK,CAACa,SAAS,CAAC;YAAEC,UAAU,EAAE;UAAM,CAAC,CAAC;QAC1C;QACA;MACJ,CAAC,CAAC;IACN;EACJ,CACJ,CAAC;AACH,C","sources":["webpack://office-addin-taskpane-js/./src/commands.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\nvar mailboxItem;\n\nOffice.initialize = function (reason) {\n    mailboxItem = Office.context.mailbox.item;\n}\n\n// Entry point for Contoso Message Body Checker add-in before send is allowed.\n// <param name=\"event\">MessageSend event is automatically passed by BlockOnSend code to the function specified in the manifest.</param>\nfunction validateBody(event) {\n    // Get the body of the message\n    Office.context.ui.displayDialogAsync('https://ml-inf-svc-dev.eventellect.com/outlook-save-for-training/dialog.html', \n      {height: 30, width: 20, displayInIframe: true},\n      function (result) {\n          if (result.status === Office.AsyncResultStatus.Failed) {\n              // Handle error\n              console.error(result.error.message);\n              event.completed({ allowEvent: false });\n              return;\n          } else {\n              // Get dialog instance\n              var dialog = result.value;\n              \n              // Add event handler for dialog events\n              dialog.addEventHandler(Office.EventType.DialogMessageReceived, function (arg) {\n                  dialog.close();\n                  if (arg.message === 'yes') {\n                      // User clicked Yes, allow send\n                      event.completed({ allowEvent: true });\n                  } else {\n                      // User clicked No or closed dialog, block send\n                      event.completed({ allowEvent: false });\n                  }\n                  return;\n              });\n          }\n      }\n  );\n}"],"names":["mailboxItem","Office","initialize","reason","context","mailbox","item","validateBody","event","ui","displayDialogAsync","height","width","displayInIframe","result","status","AsyncResultStatus","Failed","console","error","message","completed","allowEvent","dialog","value","addEventHandler","EventType","DialogMessageReceived","arg","close"],"sourceRoot":""}